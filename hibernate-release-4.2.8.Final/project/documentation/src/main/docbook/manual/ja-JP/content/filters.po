# translation of Collection_Mapping.po to
# Xi HUANG <xhuang@redhat.com>, 2007, 2010.
msgid ""
msgstr ""
"Project-Id-Version: Collection_Mapping\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-07-20 21:02+0000\n"
"PO-Revision-Date: 2010-01-18 15:28+1000\n"
"Last-Translator: Xi HUANG <xhuang@redhat.com>\n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: filters.xml:31
#, no-c-format
msgid "Filtering data"
msgstr "データのフィルタリング"

#. Tag: para
#: filters.xml:33
#, no-c-format
msgid ""
"Hibernate3 provides an innovative new approach to handling data with "
"\"visibility\" rules. A <emphasis>Hibernate filter</emphasis> is a global, "
"named, parameterized filter that can be enabled or disabled for a particular "
"Hibernate session."
msgstr ""
"Hibernate3 では「可視性」ルールに基づいてデータを扱うための画期的な方法を用意"
"しています。 <emphasis>Hibernate filter</emphasis> はグローバルで、名前付き"
"で、パラメータ化されたフィルタです。これは Hibernate セッションごとに有効無効"
"を切り替えられます。"

#. Tag: title
#: filters.xml:39
#, no-c-format
msgid "Hibernate filters"
msgstr "Hibernate のフィルタ"

#. Tag: para
#: filters.xml:41
#, no-c-format
msgid ""
"Hibernate3 has the ability to pre-define filter criteria and attach those "
"filters at both a class level and a collection level. A filter criteria "
"allows you to define a restriction clause similar to the existing \"where\" "
"attribute available on the class and various collection elements. These "
"filter conditions, however, can be parameterized. The application can then "
"decide at runtime whether certain filters should be enabled and what their "
"parameter values should be. Filters can be used like database views, but "
"they are parameterized inside the application."
msgstr ""
"Hibernate3 はフィルタクライテリアをあらかじめ定義し、これらのフィルタをクラス"
"やコレクションレベルに加える機能を加えました。フィルタクライテリアは制約節を"
"定義する機能です。これらのフィルタ条件はパラメータ化できるということを除き、"
"クラスやさまざまなコレクション要素で利用可能な ｢where｣ 句に非常によく似ていま"
"す。アプリケーションは、与えられたフィルタを可能にすべきか、そしてそのパラ"
"メータ値を何にすべきかを実行時に決定することができます。フィルタはデータベー"
"スビューのように使用されますが、アプリケーション内ではパラメータ化されます。"

#. Tag: para
#: filters.xml:50
#, no-c-format
msgid ""
"Using annotatons filters are defined via <literal>@org.hibernate.annotations."
"FilterDef</literal> or <literal>@org.hibernate.annotations.FilterDefs</"
"literal>. A filter definition has a <methodname>name()</methodname> and an "
"array of parameters(). A parameter will allow you to adjust the behavior of "
"the filter at runtime. Each parameter is defined by a <literal>@ParamDef</"
"literal> which has a name and a type. You can also define a "
"<methodname>defaultCondition()</methodname> parameter for a given "
"<literal>@FilterDef</literal> to set the default condition to use when none "
"are defined in each individual <literal>@Filter</literal>. "
"<literal>@FilterDef</literal>(s) can be defined at the class or package "
"level."
msgstr ""

#. Tag: para
#: filters.xml:63
#, no-c-format
msgid ""
"We now need to define the SQL filter clause applied to either the entity "
"load or the collection load. <literal>@Filter</literal> is used and placed "
"either on the entity or the collection element. The connection between "
"<classname>@FilterName</classname> and <classname>@Filter</classname> is a "
"matching name."
msgstr ""

#. Tag: title
#: filters.xml:70
#, no-c-format
msgid "@FilterDef and @Filter annotations"
msgstr ""

#. Tag: programlisting
#: filters.xml:72
#, no-c-format
msgid ""
"@Entity\n"
"@FilterDef(name=\"minLength\", parameters=@ParamDef( name=\"minLength\", "
"type=\"integer\" ) )\n"
"@Filters( {\n"
"    @Filter(name=\"betweenLength\", condition=\":minLength &lt;= length and :"
"maxLength &gt;= length\"),\n"
"    @Filter(name=\"minLength\", condition=\":minLength &lt;= length\")\n"
"} )\n"
"public class Forest { ... }"
msgstr ""

#. Tag: para
#: filters.xml:75
#, no-c-format
msgid ""
"When the collection use an association table as a relational representation, "
"you might want to apply the filter condition to the association table itself "
"or to the target entity table. To apply the constraint on the target entity, "
"use the regular <literal>@Filter</literal> annotation. However, if you want "
"to target the association table, use the <literal>@FilterJoinTable</literal> "
"annotation."
msgstr ""

#. Tag: title
#: filters.xml:84
#, no-c-format
msgid ""
"Using <classname>@FilterJoinTable</classname> for filterting on the "
"association table"
msgstr ""

#. Tag: programlisting
#: filters.xml:87
#, no-c-format
msgid ""
"@OneToMany\n"
"    @JoinTable\n"
"    //filter on the target entity table\n"
"    @Filter(name=\"betweenLength\", condition=\":minLength &lt;= length and :"
"maxLength &gt;= length\")\n"
"    //filter on the association table\n"
"    @FilterJoinTable(name=\"security\", condition=\":userlevel &gt;= "
"requredLevel\")\n"
"    public Set&lt;Forest&gt; getForests() { ... }"
msgstr ""

#. Tag: para
#: filters.xml:90
#, fuzzy, no-c-format
msgid ""
"Using Hibernate mapping files for defining filters the situtation is very "
"similar. The filters must first be defined and then attached to the "
"appropriate mapping elements. To define a filter, use the <literal>&lt;"
"filter-def/&gt;</literal> element within a <literal>&lt;hibernate-mapping/"
"&gt;</literal> element:"
msgstr ""
"フィルタを使うためにはまず、適切なマッピング要素に定義、追加しなくてはなりま"
"せん。フィルタを定義するためには、 <literal>&lt;hibernate-mapping/&gt;</"
"literal> 要素内で <literal>&lt;filter-def/&gt;</literal> 要素を使用します："

#. Tag: title
#: filters.xml:97
#, no-c-format
msgid "Defining a filter definition via <literal>&lt;filter-def&gt;</literal>"
msgstr ""

#. Tag: programlisting
#: filters.xml:100
#, fuzzy, no-c-format
msgid ""
"&lt;filter-def name=\"myFilter\"&gt;\n"
"    &lt;filter-param name=\"myFilterParam\" type=\"string\"/&gt;\n"
"&lt;/filter-def&gt;"
msgstr ""
"&lt;filter-def name=\"myFilter\"&gt;\n"
"    &lt;filter-param name=\"myFilterParam\" type=\"string\"/&gt;\n"
"&lt;/filter-def&gt;"

#. Tag: para
#: filters.xml:103
#, fuzzy, no-c-format
msgid ""
"This filter can then be attached to a class or collection (or, to both or "
"multiples of each at the same time):"
msgstr "どちらに対しても (また、それぞれを複数) 同時に設定することもできます。"

#. Tag: title
#: filters.xml:107
#, no-c-format
msgid ""
"Attaching a filter to a class or collection using <literal>&lt;filter&gt;</"
"literal>"
msgstr ""

#. Tag: programlisting
#: filters.xml:110
#, no-c-format
msgid ""
"&lt;class name=\"myClass\" ...&gt;\n"
"    ...\n"
"    &lt;filter name=\"myFilter\" condition=\":myFilterParam = "
"MY_FILTERED_COLUMN\"/&gt;\n"
"\n"
"    &lt;set ...&gt;\n"
"        &lt;filter name=\"myFilter\" condition=\":myFilterParam = "
"MY_FILTERED_COLUMN\"/&gt;\n"
"    &lt;/set&gt;  \n"
"&lt;/class&gt;"
msgstr ""

#. Tag: para
#: filters.xml:113
#, no-c-format
msgid ""
"The methods on <literal>Session</literal> are: <literal>enableFilter(String "
"filterName)</literal>, <literal>getEnabledFilter(String filterName)</"
"literal>, and <literal>disableFilter(String filterName)</literal>. By "
"default, filters are <emphasis>not</emphasis> enabled for a given session. "
"Filters must be enabled through use of the <literal>Session.enableFilter()</"
"literal> method, which returns an instance of the <literal>Filter</literal> "
"interface. If you used the simple filter defined above, it would look like "
"this:"
msgstr ""
"<literal>Session</literal> 上のメソッドは <literal>enableFilter(String "
"filterName)</literal>、 <literal>getEnabledFilter(String filterName)</"
"literal>、 <literal>disableFilter(String filterName)</literal> です。デフォル"
"トでは、フィルタは与えられたセッションに対して使用 <emphasis>できません</"
"emphasis> 。 <literal>Filter</literal> インスタンスを返り値とする "
"<literal>Session.enabledFilter()</literal> メソッドを使うことで、フィルタは明"
"示的に使用可能となります。上で定義した単純なフィルタの使用は、このようになり"
"ます："

#. Tag: programlisting
#: filters.xml:123
#, fuzzy, no-c-format
msgid ""
"session.enableFilter(\"myFilter\").setParameter(\"myFilterParam\", \"some-"
"value\");"
msgstr ""
"session.enableFilter(\"myFilter\").setParameter(\"myFilterParam\", \"some-"
"value\");"

#. Tag: para
#: filters.xml:125
#, no-c-format
msgid ""
"Methods on the org.hibernate.Filter interface do allow the method-chaining "
"common to much of Hibernate."
msgstr ""
"org.hibernate.Filter インターフェースのメソッドは、 Hibernate の多くに共通し"
"ているメソッド連鎖を許していることに注意してください。"

#. Tag: para
#: filters.xml:128
#, no-c-format
msgid ""
"The following is a full example, using temporal data with an effective "
"record date pattern:"
msgstr "有効なレコードデータパターンを持つ一時データを使った完全な例です："

#. Tag: programlisting
#: filters.xml:131
#, fuzzy, no-c-format
msgid ""
"&lt;filter-def name=\"effectiveDate\"&gt;\n"
"    &lt;filter-param name=\"asOfDate\" type=\"date\"/&gt;\n"
"&lt;/filter-def&gt;\n"
"\n"
"&lt;class name=\"Employee\" ...&gt;\n"
"...\n"
"    &lt;many-to-one name=\"department\" column=\"dept_id\" class=\"Department"
"\"/&gt;\n"
"    &lt;property name=\"effectiveStartDate\" type=\"date\" column="
"\"eff_start_dt\"/&gt;\n"
"    &lt;property name=\"effectiveEndDate\" type=\"date\" column=\"eff_end_dt"
"\"/&gt;\n"
"...\n"
"    &lt;!--\n"
"        Note that this assumes non-terminal records have an eff_end_dt set "
"to\n"
"        a max db date for simplicity-sake\n"
"    --&gt;\n"
"    &lt;filter name=\"effectiveDate\"\n"
"            condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/"
"&gt;\n"
"&lt;/class&gt;\n"
"\n"
"&lt;class name=\"Department\" ...&gt;\n"
"...\n"
"    &lt;set name=\"employees\" lazy=\"true\"&gt;\n"
"        &lt;key column=\"dept_id\"/&gt;\n"
"        &lt;one-to-many class=\"Employee\"/&gt;\n"
"        &lt;filter name=\"effectiveDate\"\n"
"                condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/"
"&gt;\n"
"    &lt;/set&gt;\n"
"&lt;/class&gt;"
msgstr ""
"&lt;filter-def name=\"effectiveDate\"&gt;\n"
"    &lt;filter-param name=\"asOfDate\" type=\"date\"/&gt;\n"
"&lt;/filter-def&gt;\n"
"\n"
"&lt;class name=\"Employee\" ...&gt;\n"
"...\n"
"    &lt;many-to-one name=\"department\" column=\"dept_id\" class=\"Department"
"\"/&gt;\n"
"    &lt;property name=\"effectiveStartDate\" type=\"date\" column="
"\"eff_start_dt\"/&gt;\n"
"    &lt;property name=\"effectiveEndDate\" type=\"date\" column=\"eff_end_dt"
"\"/&gt;\n"
"...\n"
"    &lt;!--\n"
"        Note that this assumes non-terminal records have an eff_end_dt set "
"to\n"
"        a max db date for simplicity-sake\n"
"    --&gt;\n"
"    &lt;filter name=\"effectiveDate\"\n"
"            condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/"
"&gt;\n"
"&lt;/class&gt;\n"
"\n"
"&lt;class name=\"Department\" ...&gt;\n"
"...\n"
"    &lt;set name=\"employees\" lazy=\"true\"&gt;\n"
"        &lt;key column=\"dept_id\"/&gt;\n"
"        &lt;one-to-many class=\"Employee\"/&gt;\n"
"        &lt;filter name=\"effectiveDate\"\n"
"                condition=\":asOfDate BETWEEN eff_start_dt and eff_end_dt\"/"
"&gt;\n"
"    &lt;/set&gt;\n"
"&lt;/class&gt;"

#. Tag: para
#: filters.xml:133
#, no-c-format
msgid ""
"In order to ensure that you are provided with currently effective records, "
"enable the filter on the session prior to retrieving employee data:"
msgstr ""
"常に現在の有効レコードを返却することを保証するために、単純に、社員データの検"
"索より前にセッション上のフィルタを有効にします:"

#. Tag: programlisting
#: filters.xml:137
#, fuzzy, no-c-format
msgid ""
"Session session = ...;\n"
"session.enableFilter(\"effectiveDate\").setParameter(\"asOfDate\", new Date"
"());\n"
"List results = session.createQuery(\"from Employee as e where e.salary &gt; :"
"targetSalary\")\n"
"         .setLong(\"targetSalary\", new Long(1000000))\n"
"         .list();"
msgstr ""
"Session session = ...;\n"
"session.enabledFilter(\"effectiveDate\").setParameter(\"asOfDate\", new Date"
"());\n"
"List results = session.createQuery(\"from Employee as e where e.salary &gt; :"
"targetSalary\")\n"
"         .setLong(\"targetSalary\", new Long(1000000))\n"
"         .list();"

#. Tag: para
#: filters.xml:139
#, no-c-format
msgid ""
"Even though a salary constraint was mentioned explicitly on the results in "
"the above HQL, because of the enabled filter, the query will return only "
"currently active employees who have a salary greater than one million "
"dollars."
msgstr ""
"上記の HQL では、結果の給料の制約について明示的に触れただけですが、有効になっ"
"ているフィルタのおかげで、このクエリは給料が100万ドル以上の現役の社員だけを返"
"します。"

#. Tag: para
#: filters.xml:144
#, no-c-format
msgid ""
"If you want to use filters with outer joining, either through HQL or load "
"fetching, be careful of the direction of the condition expression. It is "
"safest to set this up for left outer joining. Place the parameter first "
"followed by the column name(s) after the operator."
msgstr ""
"注記： (HQL かロードフェッチで）外部結合を持つフィルタを使うつもりなら、条件"
"式の方向に注意してください。これは左外部結合のために設定するのが最も安全で"
"す。一般的に、演算子の後カラム名に続けて最初のパラメータを配置してください。"

#. Tag: para
#: filters.xml:149
#, no-c-format
msgid ""
"After being defined, a filter might be attached to multiple entities and/or "
"collections each with its own condition. This can be problematic when the "
"conditions are the same each time. Using <literal>&lt;filter-def/&gt;</"
"literal> allows you to definine a default condition, either as an attribute "
"or CDATA:"
msgstr ""
"定義したあと、フィルタは、それぞれ独自のコンディションを持つ複数のエンティ"
"ティやコレクションにアタッチされます。コンディションがいつも同じ場合、それは"
"面倒かもしれません。従って、 <literal>&lt;filter-def/&gt;</literal> は、属性"
"または CDATA としてデフォルトコンディションを定義することが可能になります："

#. Tag: programlisting
#: filters.xml:155
#, fuzzy, no-c-format
msgid ""
"&lt;filter-def name=\"myFilter\" condition=\"abc &gt; xyz\"&gt;...&lt;/"
"filter-def&gt;\n"
"&lt;filter-def name=\"myOtherFilter\"&gt;abc=xyz&lt;/filter-def&gt;"
msgstr ""
"&lt;filter-def name=\"myFilter\" condition=\"abc &gt; xyz\"&gt;...&lt;/"
"filter-def&gt;\n"
"&lt;filter-def name=\"myOtherFilter\"&gt;abc=xyz&lt;/filter-def&gt;"

#. Tag: para
#: filters.xml:157
#, no-c-format
msgid ""
"This default condition will be used whenever the filter is attached to "
"something without specifying a condition. This means you can give a specific "
"condition as part of the attachment of the filter that overrides the default "
"condition in that particular case."
msgstr ""
"このデフォルトのコンディションは、コンディションを指定せずに何かにアタッチさ"
"れる場合いつでも使われます。これは、特定のケースにおいてデフォルトのコンディ"
"ションをオーバーライドするフィルターのアタッチメントの一部として、特定のコン"
"ディションを与えることができることを意味します。"

#~ msgid "This filter can then be attached to a class:"
#~ msgstr "そうしてフィルタはクラスへと結び付けられます："

#~ msgid "Or, to a collection:"
#~ msgstr "また、コレクションに対しては次のようになります："

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<class name=\"myClass\" ...>\n"
#~ "    ...\n"
#~ "    <filter name=\"myFilter\" condition=\":myFilterParam = "
#~ "MY_FILTERED_COLUMN\"/>\n"
#~ "</class>]]>"
#~ msgstr ""
#~ "&lt;class name=\"myClass\" ...&gt;\n"
#~ "    ...\n"
#~ "    &lt;filter name=\"myFilter\" condition=\":myFilterParam = "
#~ "MY_FILTERED_COLUMN\"/&gt;\n"
#~ "&lt;/class&gt;"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<set ...>\n"
#~ "    <filter name=\"myFilter\" condition=\":myFilterParam = "
#~ "MY_FILTERED_COLUMN\"/>\n"
#~ "</set>]]>"
#~ msgstr ""
#~ "&lt;set ...&gt;\n"
#~ "    &lt;filter name=\"myFilter\" condition=\":myFilterParam = "
#~ "MY_FILTERED_COLUMN\"/&gt;\n"
#~ "&lt;/set&gt;"
