# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-07-20 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: configuration.xml:31
#, no-c-format
msgid "Configuration"
msgstr ""

#. Tag: para
#: configuration.xml:33
#, no-c-format
msgid "Hibernate is designed to operate in many different environments and, as such, there is a broad range of configuration parameters. Fortunately, most have sensible default values and Hibernate is distributed with an example <literal>hibernate.properties</literal> file in <literal>etc/</literal> that displays the various options. Simply put the example file in your classpath and customize it to suit your needs."
msgstr ""

#. Tag: title
#: configuration.xml:41
#, no-c-format
msgid "Programmatic configuration"
msgstr ""

#. Tag: para
#: configuration.xml:43
#, no-c-format
msgid "An instance of <classname>org.hibernate.cfg.Configuration</classname> represents an entire set of mappings of an application's Java types to an SQL database. The <classname>org.hibernate.cfg.Configuration</classname> is used to build an immutable <interfacename>org.hibernate.SessionFactory</interfacename>. The mappings are compiled from various XML mapping files."
msgstr ""

#. Tag: para
#: configuration.xml:51
#, no-c-format
msgid "You can obtain a <classname>org.hibernate.cfg.Configuration</classname> instance by instantiating it directly and specifying XML mapping documents. If the mapping files are in the classpath, use <literal>addResource()</literal>. For example:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:57
#, no-c-format
msgid ""
      "Configuration cfg = new Configuration()\n"
      "    .addResource(\"Item.hbm.xml\")\n"
      "    .addResource(\"Bid.hbm.xml\");"
msgstr ""

#. Tag: para
#: configuration.xml:59
#, no-c-format
msgid "An alternative way is to specify the mapped class and allow Hibernate to find the mapping document for you:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:62
#, no-c-format
msgid ""
      "Configuration cfg = new Configuration()\n"
      "    .addClass(org.hibernate.auction.Item.class)\n"
      "    .addClass(org.hibernate.auction.Bid.class);"
msgstr ""

#. Tag: para
#: configuration.xml:64
#, no-c-format
msgid "Hibernate will then search for mapping files named <filename>/org/hibernate/auction/Item.hbm.xml</filename> and <filename>/org/hibernate/auction/Bid.hbm.xml</filename> in the classpath. This approach eliminates any hardcoded filenames."
msgstr ""

#. Tag: para
#: configuration.xml:69
#, no-c-format
msgid "A <classname>org.hibernate.cfg.Configuration</classname> also allows you to specify configuration properties. For example:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:72
#, no-c-format
msgid ""
      "Configuration cfg = new Configuration()\n"
      "    .addClass(org.hibernate.auction.Item.class)\n"
      "    .addClass(org.hibernate.auction.Bid.class)\n"
      "    .setProperty(\"hibernate.dialect\", \"org.hibernate.dialect.MySQLInnoDBDialect\")\n"
      "    .setProperty(\"hibernate.connection.datasource\", \"java:comp/env/jdbc/test\")\n"
      "    .setProperty(\"hibernate.order_updates\", \"true\");"
msgstr ""

#. Tag: para
#: configuration.xml:74
#, no-c-format
msgid "This is not the only way to pass configuration properties to Hibernate. Some alternative options include:"
msgstr ""

#. Tag: para
#: configuration.xml:79
#, no-c-format
msgid "Pass an instance of <classname>java.util.Properties</classname> to <literal>Configuration.setProperties()</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:84
#, no-c-format
msgid "Place a file named <filename>hibernate.properties</filename> in a root directory of the classpath."
msgstr ""

#. Tag: para
#: configuration.xml:89
#, no-c-format
msgid "Set <literal>System</literal> properties using <literal>java -Dproperty=value</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:94
#, no-c-format
msgid "Include <literal>&lt;property&gt;</literal> elements in <literal>hibernate.cfg.xml</literal> (this is discussed later)."
msgstr ""

#. Tag: para
#: configuration.xml:99
#, no-c-format
msgid "If you want to get started quickly<filename>hibernate.properties</filename> is the easiest approach."
msgstr ""

#. Tag: para
#: configuration.xml:103
#, no-c-format
msgid "The <classname>org.hibernate.cfg.Configuration</classname> is intended as a startup-time object that will be discarded once a <literal>SessionFactory</literal> is created."
msgstr ""

#. Tag: title
#: configuration.xml:109
#, no-c-format
msgid "Obtaining a SessionFactory"
msgstr ""

#. Tag: para
#: configuration.xml:111
#, no-c-format
msgid "When all mappings have been parsed by the <classname>org.hibernate.cfg.Configuration</classname>, the application must obtain a factory for <interfacename>org.hibernate.Session</interfacename> instances. This factory is intended to be shared by all application threads:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:117
#, no-c-format
msgid "SessionFactory sessions = cfg.buildSessionFactory();"
msgstr ""

#. Tag: para
#: configuration.xml:119
#, no-c-format
msgid "Hibernate does allow your application to instantiate more than one <interfacename>org.hibernate.SessionFactory</interfacename>. This is useful if you are using more than one database."
msgstr ""

#. Tag: title
#: configuration.xml:125
#, no-c-format
msgid "JDBC connections"
msgstr ""

#. Tag: para
#: configuration.xml:127
#, no-c-format
msgid "It is advisable to have the <interfacename>org.hibernate.SessionFactory</interfacename> create and pool JDBC connections for you. If you take this approach, opening a <interfacename>org.hibernate.Session</interfacename> is as simple as:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:133
#, no-c-format
msgid "Session session = sessions.openSession(); // open a new Session"
msgstr ""

#. Tag: para
#: configuration.xml:135
#, no-c-format
msgid "Once you start a task that requires access to the database, a JDBC connection will be obtained from the pool."
msgstr ""

#. Tag: para
#: configuration.xml:138
#, no-c-format
msgid "Before you can do this, you first need to pass some JDBC connection properties to Hibernate. All Hibernate property names and semantics are defined on the class <classname>org.hibernate.cfg.Environment</classname>. The most important settings for JDBC connection configuration are outlined below."
msgstr ""

#. Tag: para
#: configuration.xml:144
#, no-c-format
msgid "Hibernate will obtain and pool connections using <classname>java.sql.DriverManager</classname> if you set the following properties:"
msgstr ""

#. Tag: title
#: configuration.xml:149
#, no-c-format
msgid "Hibernate JDBC Properties"
msgstr ""

#. Tag: entry
#: configuration.xml:158 configuration.xml:236 configuration.xml:327 configuration.xml:495 configuration.xml:657 configuration.xml:753 configuration.xml:826
#, no-c-format
msgid "Property name"
msgstr ""

#. Tag: entry
#: configuration.xml:160 configuration.xml:238 configuration.xml:329 configuration.xml:497 configuration.xml:659 configuration.xml:755 configuration.xml:828
#, no-c-format
msgid "Purpose"
msgstr ""

#. Tag: property
#: configuration.xml:166
#, no-c-format
msgid "hibernate.connection.driver_class"
msgstr ""

#. Tag: emphasis
#: configuration.xml:168
#, no-c-format
msgid "JDBC driver class"
msgstr ""

#. Tag: property
#: configuration.xml:172
#, no-c-format
msgid "hibernate.connection.url"
msgstr ""

#. Tag: emphasis
#: configuration.xml:174
#, no-c-format
msgid "JDBC URL"
msgstr ""

#. Tag: property
#: configuration.xml:178 configuration.xml:265
#, no-c-format
msgid "hibernate.connection.username"
msgstr ""

#. Tag: emphasis
#: configuration.xml:180
#, no-c-format
msgid "database user"
msgstr ""

#. Tag: property
#: configuration.xml:184 configuration.xml:271
#, no-c-format
msgid "hibernate.connection.password"
msgstr ""

#. Tag: emphasis
#: configuration.xml:186
#, no-c-format
msgid "database user password"
msgstr ""

#. Tag: property
#: configuration.xml:190
#, no-c-format
msgid "hibernate.connection.pool_size"
msgstr ""

#. Tag: emphasis
#: configuration.xml:192
#, no-c-format
msgid "maximum number of pooled connections"
msgstr ""

#. Tag: para
#: configuration.xml:199
#, no-c-format
msgid "Hibernate's own connection pooling algorithm is, however, quite rudimentary. It is intended to help you get started and is <emphasis>not intended for use in a production system</emphasis>, or even for performance testing. You should use a third party pool for best performance and stability. Just replace the <property>hibernate.connection.pool_size</property> property with connection pool specific settings. This will turn off Hibernate's internal pool. For example, you might like to use c3p0."
msgstr ""

#. Tag: para
#: configuration.xml:208
#, no-c-format
msgid "C3P0 is an open source JDBC connection pool distributed along with Hibernate in the <filename>lib</filename> directory. Hibernate will use its <classname>org.hibernate.connection.C3P0ConnectionProvider</classname> for connection pooling if you set <property>hibernate.c3p0.*</property> properties. If you would like to use Proxool, refer to the packaged <filename>hibernate.properties</filename> and the Hibernate web site for more information."
msgstr ""

#. Tag: para
#: configuration.xml:216
#, no-c-format
msgid "The following is an example <filename>hibernate.properties</filename> file for c3p0:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:219
#, no-c-format
msgid ""
      "hibernate.connection.driver_class = org.postgresql.Driver\n"
      "hibernate.connection.url = jdbc:postgresql://localhost/mydatabase\n"
      "hibernate.connection.username = myuser\n"
      "hibernate.connection.password = secret\n"
      "hibernate.c3p0.min_size=5\n"
      "hibernate.c3p0.max_size=20\n"
      "hibernate.c3p0.timeout=1800\n"
      "hibernate.c3p0.max_statements=50\n"
      "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect"
msgstr ""

#. Tag: para
#: configuration.xml:221
#, no-c-format
msgid "For use inside an application server, you should almost always configure Hibernate to obtain connections from an application server <interfacename>javax.sql.Datasource</interfacename> registered in JNDI. You will need to set at least one of the following properties:"
msgstr ""

#. Tag: title
#: configuration.xml:227
#, no-c-format
msgid "Hibernate Datasource Properties"
msgstr ""

#. Tag: property
#: configuration.xml:244
#, no-c-format
msgid "hibernate.connection.datasource"
msgstr ""

#. Tag: emphasis
#: configuration.xml:246
#, no-c-format
msgid "datasource JNDI name"
msgstr ""

#. Tag: property
#: configuration.xml:250
#, no-c-format
msgid "hibernate.jndi.url"
msgstr ""

#. Tag: entry
#: configuration.xml:252
#, no-c-format
msgid "<emphasis>URL of the JNDI provider</emphasis> (optional)"
msgstr ""

#. Tag: property
#: configuration.xml:257
#, no-c-format
msgid "hibernate.jndi.class"
msgstr ""

#. Tag: entry
#: configuration.xml:259
#, no-c-format
msgid "<emphasis>class of the JNDI <literal>InitialContextFactory</literal></emphasis> (optional)"
msgstr ""

#. Tag: entry
#: configuration.xml:267
#, no-c-format
msgid "<emphasis>database user</emphasis> (optional)"
msgstr ""

#. Tag: entry
#: configuration.xml:273
#, no-c-format
msgid "<emphasis>database user password</emphasis> (optional)"
msgstr ""

#. Tag: para
#: configuration.xml:280
#, no-c-format
msgid "Here is an example <filename>hibernate.properties</filename> file for an application server provided JNDI datasource:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:283
#, no-c-format
msgid ""
      "hibernate.connection.datasource = java:/comp/env/jdbc/test\n"
      "hibernate.transaction.factory_class = \\\n"
      "    org.hibernate.transaction.JTATransactionFactory\n"
      "hibernate.transaction.manager_lookup_class = \\\n"
      "    org.hibernate.transaction.JBossTransactionManagerLookup\n"
      "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect"
msgstr ""

#. Tag: para
#: configuration.xml:285
#, no-c-format
msgid "JDBC connections obtained from a JNDI datasource will automatically participate in the container-managed transactions of the application server."
msgstr ""

#. Tag: para
#: configuration.xml:289
#, no-c-format
msgid "Arbitrary connection properties can be given by prepending \"<literal>hibernate.connection</literal>\" to the connection property name. For example, you can specify a <property>charSet</property> connection property using <property>hibernate.connection.charSet</property>."
msgstr ""

#. Tag: para
#: configuration.xml:294
#, no-c-format
msgid "You can define your own plugin strategy for obtaining JDBC connections by implementing the interface <interfacename>org.hibernate.connection.ConnectionProvider</interfacename>, and specifying your custom implementation via the <property>hibernate.connection.provider_class</property> property."
msgstr ""

#. Tag: title
#: configuration.xml:302
#, no-c-format
msgid "Optional configuration properties"
msgstr ""

#. Tag: para
#: configuration.xml:304
#, no-c-format
msgid "There are a number of other properties that control the behavior of Hibernate at runtime. All are optional and have reasonable default values."
msgstr ""

#. Tag: para
#: configuration.xml:309
#, no-c-format
msgid "<emphasis>Some of these properties are \"system-level\" only.</emphasis> System-level properties can be set only via <literal>java -Dproperty=value</literal> or <filename>hibernate.properties</filename>. They <emphasis>cannot</emphasis> be set by the other techniques described above."
msgstr ""

#. Tag: title
#: configuration.xml:318
#, no-c-format
msgid "Hibernate Configuration Properties"
msgstr ""

#. Tag: property
#: configuration.xml:335
#, no-c-format
msgid "hibernate.dialect"
msgstr ""

#. Tag: entry
#: configuration.xml:337
#, no-c-format
msgid "The classname of a Hibernate <classname>org.hibernate.dialect.Dialect</classname> which allows Hibernate to generate SQL optimized for a particular relational database."
msgstr ""

#. Tag: para
#: configuration.xml:340
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>full.classname.of.Dialect</literal>"
msgstr ""

#. Tag: para
#: configuration.xml:341
#, no-c-format
msgid "In most cases Hibernate will actually be able to choose the correct <classname>org.hibernate.dialect.Dialect</classname> implementation based on the <literal>JDBC metadata</literal> returned by the JDBC driver."
msgstr ""

#. Tag: property
#: configuration.xml:349
#, no-c-format
msgid "hibernate.show_sql"
msgstr ""

#. Tag: entry
#: configuration.xml:351
#, no-c-format
msgid "Write all SQL statements to console. This is an alternative to setting the log category <literal>org.hibernate.SQL</literal> to <literal>debug</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:353 configuration.xml:361 configuration.xml:426 configuration.xml:435 configuration.xml:443 configuration.xml:453 configuration.xml:468 configuration.xml:525 configuration.xml:545 configuration.xml:555 configuration.xml:598 configuration.xml:797 configuration.xml:808 configuration.xml:904
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>true</literal> | <literal>false</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:359
#, no-c-format
msgid "hibernate.format_sql"
msgstr ""

#. Tag: entry
#: configuration.xml:361
#, no-c-format
msgid "Pretty print the SQL in the log and console."
msgstr ""

#. Tag: property
#: configuration.xml:367
#, no-c-format
msgid "hibernate.default_schema"
msgstr ""

#. Tag: entry
#: configuration.xml:369
#, no-c-format
msgid "Qualify unqualified table names with the given schema/tablespace in generated SQL."
msgstr ""

#. Tag: para
#: configuration.xml:370
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>SCHEMA_NAME</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:376
#, no-c-format
msgid "hibernate.default_catalog"
msgstr ""

#. Tag: entry
#: configuration.xml:378
#, no-c-format
msgid "Qualifies unqualified table names with the given catalog in generated SQL."
msgstr ""

#. Tag: para
#: configuration.xml:379
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>CATALOG_NAME</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:384
#, no-c-format
msgid "hibernate.session_factory_name"
msgstr ""

#. Tag: entry
#: configuration.xml:386
#, no-c-format
msgid "The <interfacename>org.hibernate.SessionFactory</interfacename> will be automatically bound to this name in JNDI after it has been created."
msgstr ""

#. Tag: para
#: configuration.xml:389 configuration.xml:776
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>jndi/composite/name</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:394
#, no-c-format
msgid "hibernate.max_fetch_depth"
msgstr ""

#. Tag: entry
#: configuration.xml:396
#, no-c-format
msgid "Sets a maximum \"depth\" for the outer join fetch tree for single-ended associations (one-to-one, many-to-one). A <literal>0</literal> disables default outer join fetching."
msgstr ""

#. Tag: para
#: configuration.xml:398
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> recommended values between <literal>0</literal> and <literal>3</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:404
#, no-c-format
msgid "hibernate.default_batch_fetch_size"
msgstr ""

#. Tag: entry
#: configuration.xml:406
#, no-c-format
msgid "Sets a default size for Hibernate batch fetching of associations."
msgstr ""

#. Tag: para
#: configuration.xml:407
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> recommended values <literal>4</literal>, <literal>8</literal>, <literal>16</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:413
#, no-c-format
msgid "hibernate.default_entity_mode"
msgstr ""

#. Tag: entry
#: configuration.xml:415
#, no-c-format
msgid "Sets a default mode for entity representation for all sessions opened from this <literal>SessionFactory</literal>"
msgstr ""

#. Tag: para
#: configuration.xml:416
#, no-c-format
msgid "<literal>dynamic-map</literal>, <literal>dom4j</literal>, <literal>pojo</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:422
#, no-c-format
msgid "hibernate.order_updates"
msgstr ""

#. Tag: entry
#: configuration.xml:424
#, no-c-format
msgid "Forces Hibernate to order SQL updates by the primary key value of the items being updated. This will result in fewer transaction deadlocks in highly concurrent systems."
msgstr ""

#. Tag: property
#: configuration.xml:432
#, no-c-format
msgid "hibernate.generate_statistics"
msgstr ""

#. Tag: entry
#: configuration.xml:434
#, no-c-format
msgid "If enabled, Hibernate will collect statistics useful for performance tuning."
msgstr ""

#. Tag: property
#: configuration.xml:440
#, no-c-format
msgid "hibernate.use_identifier_rollback"
msgstr ""

#. Tag: entry
#: configuration.xml:442
#, no-c-format
msgid "If enabled, generated identifier properties will be reset to default values when objects are deleted."
msgstr ""

#. Tag: property
#: configuration.xml:449
#, no-c-format
msgid "hibernate.use_sql_comments"
msgstr ""

#. Tag: entry
#: configuration.xml:451
#, no-c-format
msgid "If turned on, Hibernate will generate comments inside the SQL, for easier debugging, defaults to <literal>false</literal>."
msgstr ""

#. Tag: property
#: configuration.xml:458
#, no-c-format
msgid "hibernate.id.new_generator_mappings"
msgstr ""

#. Tag: entry
#: configuration.xml:460
#, no-c-format
msgid "Setting is relevant when using <classname>@GeneratedValue</classname>. It indicates whether or not the new <classname>IdentifierGenerator</classname> implementations are used for <classname>javax.persistence.GenerationType.AUTO</classname>, <classname>javax.persistence.GenerationType.TABLE</classname> and <classname>javax.persistence.GenerationType.SEQUENCE</classname>. Default to <literal>false</literal> to keep backward compatibility."
msgstr ""

#. Tag: para
#: configuration.xml:476
#, no-c-format
msgid "We recommend all new projects which make use of to use <classname>@GeneratedValue</classname> to also set <code>hibernate.id.new_generator_mappings=true</code> as the new generators are more efficient and closer to the JPA 2 specification semantic. However they are not backward compatible with existing databases (if a sequence or a table is used for id generation)."
msgstr ""

#. Tag: title
#: configuration.xml:485
#, no-c-format
msgid "Hibernate JDBC and Connection Properties"
msgstr ""

#. Tag: property
#: configuration.xml:503
#, no-c-format
msgid "hibernate.jdbc.fetch_size"
msgstr ""

#. Tag: entry
#: configuration.xml:505
#, no-c-format
msgid "A non-zero value determines the JDBC fetch size (calls <literal>Statement.setFetchSize()</literal>)."
msgstr ""

#. Tag: property
#: configuration.xml:510
#, no-c-format
msgid "hibernate.jdbc.batch_size"
msgstr ""

#. Tag: entry
#: configuration.xml:512
#, no-c-format
msgid "A non-zero value enables use of JDBC2 batch updates by Hibernate."
msgstr ""

#. Tag: para
#: configuration.xml:513
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> recommended values between <literal>5</literal> and <literal>30</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:519
#, no-c-format
msgid "hibernate.jdbc.batch_versioned_data"
msgstr ""

#. Tag: entry
#: configuration.xml:521
#, no-c-format
msgid "Set this property to <literal>true</literal> if your JDBC driver returns correct row counts from <literal>executeBatch()</literal>. It is usually safe to turn this option on. Hibernate will then use batched DML for automatically versioned data. Defaults to <literal>false</literal>."
msgstr ""

#. Tag: property
#: configuration.xml:531
#, no-c-format
msgid "hibernate.jdbc.factory_class"
msgstr ""

#. Tag: entry
#: configuration.xml:533
#, no-c-format
msgid "Select a custom <interfacename>org.hibernate.jdbc.Batcher</interfacename>. Most applications will not need this configuration property."
msgstr ""

#. Tag: para
#: configuration.xml:535
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.BatcherFactory</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:541
#, no-c-format
msgid "hibernate.jdbc.use_scrollable_resultset"
msgstr ""

#. Tag: entry
#: configuration.xml:543
#, no-c-format
msgid "Enables use of JDBC2 scrollable resultsets by Hibernate. This property is only necessary when using user-supplied JDBC connections. Hibernate uses connection metadata otherwise."
msgstr ""

#. Tag: property
#: configuration.xml:551
#, no-c-format
msgid "hibernate.jdbc.use_streams_for_binary"
msgstr ""

#. Tag: entry
#: configuration.xml:553
#, no-c-format
msgid "Use streams when writing/reading <literal>binary</literal> or <literal>serializable</literal> types to/from JDBC. <emphasis>*system-level property*</emphasis>"
msgstr ""

#. Tag: property
#: configuration.xml:561
#, no-c-format
msgid "hibernate.jdbc.use_get_generated_keys"
msgstr ""

#. Tag: entry
#: configuration.xml:563
#, no-c-format
msgid "Enables use of JDBC3 <literal>PreparedStatement.getGeneratedKeys()</literal> to retrieve natively generated keys after insert. Requires JDBC3+ driver and JRE1.4+, set to false if your driver has problems with the Hibernate identifier generators. By default, it tries to determine the driver capabilities using connection metadata."
msgstr ""

#. Tag: para
#: configuration.xml:569 configuration.xml:678 configuration.xml:687 configuration.xml:696 configuration.xml:723
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>true|false</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:574
#, no-c-format
msgid "hibernate.connection.provider_class"
msgstr ""

#. Tag: entry
#: configuration.xml:576
#, no-c-format
msgid "The classname of a custom <interfacename>org.hibernate.connection.ConnectionProvider</interfacename> which provides JDBC connections to Hibernate."
msgstr ""

#. Tag: para
#: configuration.xml:578
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.ConnectionProvider</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:584
#, no-c-format
msgid "hibernate.connection.isolation"
msgstr ""

#. Tag: entry
#: configuration.xml:586
#, no-c-format
msgid "Sets the JDBC transaction isolation level. Check <interfacename>java.sql.Connection</interfacename> for meaningful values, but note that most databases do not support all isolation levels and some define additional, non-standard isolations."
msgstr ""

#. Tag: para
#: configuration.xml:589
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>1, 2, 4, 8</literal>"
msgstr ""

#. Tag: property
#: configuration.xml:595
#, no-c-format
msgid "hibernate.connection.autocommit"
msgstr ""

#. Tag: entry
#: configuration.xml:597
#, no-c-format
msgid "Enables autocommit for JDBC pooled connections (it is not recommended)."
msgstr ""

#. Tag: property
#: configuration.xml:603
#, no-c-format
msgid "hibernate.connection.release_mode"
msgstr ""

#. Tag: entry
#: configuration.xml:605
#, no-c-format
msgid "Specifies when Hibernate should release JDBC connections. By default, a JDBC connection is held until the session is explicitly closed or disconnected. For an application server JTA datasource, use <literal>after_statement</literal> to aggressively release connections after every JDBC call. For a non-JTA connection, it often makes sense to release the connection at the end of each transaction, by using <literal>after_transaction</literal>. <literal>auto</literal> will choose <literal>after_statement</literal> for the JTA and CMT transaction strategies and <literal>after_transaction</literal> for the JDBC transaction strategy."
msgstr ""

#. Tag: para
#: configuration.xml:615
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>auto</literal> (default) | <literal>on_close</literal> | <literal>after_transaction</literal> | <literal>after_statement</literal>"
msgstr ""

#. Tag: para
#: configuration.xml:618
#, no-c-format
msgid "This setting only affects <literal>Session</literal>s returned from <literal>SessionFactory.openSession</literal>. For <literal>Session</literal>s obtained through <literal>SessionFactory.getCurrentSession</literal>, the <literal>CurrentSessionContext</literal> implementation configured for use controls the connection release mode for those <literal>Session</literal>s. See"
msgstr ""

#. Tag: entry
#: configuration.xml:630
#, no-c-format
msgid "<property>hibernate.connection.</property><emphasis>&lt;propertyName&gt;</emphasis>"
msgstr ""

#. Tag: entry
#: configuration.xml:632
#, no-c-format
msgid "Pass the JDBC property <emphasis>&lt;propertyName&gt;</emphasis> to <literal>DriverManager.getConnection()</literal>."
msgstr ""

#. Tag: entry
#: configuration.xml:638
#, no-c-format
msgid "<property>hibernate.jndi.</property><emphasis>&lt;propertyName&gt;</emphasis>"
msgstr ""

#. Tag: entry
#: configuration.xml:640
#, no-c-format
msgid "Pass the property <emphasis>&lt;propertyName&gt;</emphasis> to the JNDI <literal>InitialContextFactory</literal>."
msgstr ""

#. Tag: title
#: configuration.xml:648
#, no-c-format
msgid "Hibernate Cache Properties"
msgstr ""

#. Tag: literal
#: configuration.xml:665
#, no-c-format
msgid "hibernate.cache.provider_class"
msgstr ""

#. Tag: entry
#: configuration.xml:667
#, no-c-format
msgid "The classname of a custom <literal>CacheProvider</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:668
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.CacheProvider</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:673
#, no-c-format
msgid "hibernate.cache.use_minimal_puts"
msgstr ""

#. Tag: entry
#: configuration.xml:675
#, no-c-format
msgid "Optimizes second-level cache operation to minimize writes, at the cost of more frequent reads. This setting is most useful for clustered caches and, in Hibernate3, is enabled by default for clustered cache implementations."
msgstr ""

#. Tag: literal
#: configuration.xml:684
#, no-c-format
msgid "hibernate.cache.use_query_cache"
msgstr ""

#. Tag: entry
#: configuration.xml:686
#, no-c-format
msgid "Enables the query cache. Individual queries still have to be set cachable."
msgstr ""

#. Tag: literal
#: configuration.xml:692
#, no-c-format
msgid "hibernate.cache.use_second_level_cache"
msgstr ""

#. Tag: entry
#: configuration.xml:694
#, no-c-format
msgid "Can be used to completely disable the second level cache, which is enabled by default for classes which specify a <literal>&lt;cache&gt;</literal> mapping."
msgstr ""

#. Tag: literal
#: configuration.xml:702
#, no-c-format
msgid "hibernate.cache.query_cache_factory"
msgstr ""

#. Tag: entry
#: configuration.xml:704
#, no-c-format
msgid "The classname of a custom <literal>QueryCache</literal> interface, defaults to the built-in <literal>StandardQueryCache</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:706
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.QueryCache</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:712
#, no-c-format
msgid "hibernate.cache.region_prefix"
msgstr ""

#. Tag: entry
#: configuration.xml:714
#, no-c-format
msgid "A prefix to use for second-level cache region names."
msgstr ""

#. Tag: para
#: configuration.xml:714
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>prefix</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:720
#, no-c-format
msgid "hibernate.cache.use_structured_entries"
msgstr ""

#. Tag: entry
#: configuration.xml:722
#, no-c-format
msgid "Forces Hibernate to store data in the second-level cache in a more human-friendly format."
msgstr ""

#. Tag: literal
#: configuration.xml:729
#, no-c-format
msgid "hibernate.cache.default_cache_concurrency_strategy"
msgstr ""

#. Tag: entry
#: configuration.xml:731
#, no-c-format
msgid "Setting used to give the name of the default <classname>org.hibernate.annotations.CacheConcurrencyStrategy</classname> to use when either <classname>@Cacheable</classname> or <classname>@Cache</classname> is used. <code>@Cache(strategy=\"..\")</code> is used to override this default."
msgstr ""

#. Tag: title
#: configuration.xml:744
#, no-c-format
msgid "Hibernate Transaction Properties"
msgstr ""

#. Tag: literal
#: configuration.xml:761
#, no-c-format
msgid "hibernate.transaction.factory_class"
msgstr ""

#. Tag: entry
#: configuration.xml:763
#, no-c-format
msgid "The classname of a <literal>TransactionFactory</literal> to use with Hibernate <literal>Transaction</literal> API (defaults to <literal>JDBCTransactionFactory</literal>)."
msgstr ""

#. Tag: para
#: configuration.xml:765
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.TransactionFactory</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:771
#, no-c-format
msgid "jta.UserTransaction"
msgstr ""

#. Tag: entry
#: configuration.xml:773
#, no-c-format
msgid "A JNDI name used by <literal>JTATransactionFactory</literal> to obtain the JTA <literal>UserTransaction</literal> from the application server."
msgstr ""

#. Tag: literal
#: configuration.xml:781
#, no-c-format
msgid "hibernate.transaction.manager_lookup_class"
msgstr ""

#. Tag: entry
#: configuration.xml:783
#, no-c-format
msgid "The classname of a <literal>TransactionManagerLookup</literal>. It is required when JVM-level caching is enabled or when using hilo generator in a JTA environment."
msgstr ""

#. Tag: para
#: configuration.xml:786
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.TransactionManagerLookup</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:792
#, no-c-format
msgid "hibernate.transaction.flush_before_completion"
msgstr ""

#. Tag: entry
#: configuration.xml:794
#, no-c-format
msgid "If enabled, the session will be automatically flushed during the before completion phase of the transaction. Built-in and automatic session context management is preferred, see <xref linkend=\"architecture-current-session\"/>."
msgstr ""

#. Tag: literal
#: configuration.xml:803
#, no-c-format
msgid "hibernate.transaction.auto_close_session"
msgstr ""

#. Tag: entry
#: configuration.xml:805
#, no-c-format
msgid "If enabled, the session will be automatically closed during the after completion phase of the transaction. Built-in and automatic session context management is preferred, see <xref linkend=\"architecture-current-session\"/>."
msgstr ""

#. Tag: title
#: configuration.xml:817
#, no-c-format
msgid "Miscellaneous Properties"
msgstr ""

#. Tag: literal
#: configuration.xml:834
#, no-c-format
msgid "hibernate.current_session_context_class"
msgstr ""

#. Tag: entry
#: configuration.xml:836
#, no-c-format
msgid "Supply a custom strategy for the scoping of the \"current\" <literal>Session</literal>. See <xref linkend=\"architecture-current-session\"/> for more information about the built-in strategies."
msgstr ""

#. Tag: para
#: configuration.xml:839
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>jta</literal> | <literal>thread</literal> | <literal>managed</literal> | <literal>custom.Class</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:846
#, no-c-format
msgid "hibernate.query.factory_class"
msgstr ""

#. Tag: entry
#: configuration.xml:848
#, no-c-format
msgid "Chooses the HQL parser implementation."
msgstr ""

#. Tag: para
#: configuration.xml:848
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>org.hibernate.hql.ast.ASTQueryTranslatorFactory</literal> or <literal>org.hibernate.hql.classic.ClassicQueryTranslatorFactory</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:857
#, no-c-format
msgid "hibernate.query.substitutions"
msgstr ""

#. Tag: entry
#: configuration.xml:859
#, no-c-format
msgid "Is used to map from tokens in Hibernate queries to SQL tokens (tokens might be function or literal names, for example)."
msgstr ""

#. Tag: para
#: configuration.xml:861
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>hqlLiteral=SQL_LITERAL, hqlFunction=SQLFUNC</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:867
#, no-c-format
msgid "hibernate.hbm2ddl.auto"
msgstr ""

#. Tag: entry
#: configuration.xml:869
#, no-c-format
msgid "Automatically validates or exports schema DDL to the database when the <literal>SessionFactory</literal> is created. With <literal>create-drop</literal>, the database schema will be dropped when the <literal>SessionFactory</literal> is closed explicitly."
msgstr ""

#. Tag: para
#: configuration.xml:873
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>validate</literal> | <literal>update</literal> | <literal>create</literal> | <literal>create-drop</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:880
#, no-c-format
msgid "hibernate.hbm2ddl.import_file"
msgstr ""

#. Tag: para
#: configuration.xml:882
#, no-c-format
msgid "Comma-separated names of the optional files containing SQL DML statements executed during the <classname>SessionFactory</classname> creation. This is useful for testing or demoing: by adding INSERT statements for example you can populate your database with a minimal set of data when it is deployed."
msgstr ""

#. Tag: para
#: configuration.xml:887
#, no-c-format
msgid "File order matters, the statements of a give file are executed before the statements of the following files. These statements are only executed if the schema is created ie if <literal>hibernate.hbm2ddl.auto</literal> is set to <literal>create</literal> or <literal>create-drop</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:892
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>/humans.sql,/dogs.sql</literal>"
msgstr ""

#. Tag: literal
#: configuration.xml:898
#, no-c-format
msgid "hibernate.cglib.use_reflection_optimizer"
msgstr ""

#. Tag: entry
#: configuration.xml:900
#, no-c-format
msgid "Enables the use of CGLIB instead of runtime reflection (System-level property). Reflection can sometimes be useful when troubleshooting. Hibernate always requires CGLIB even if you turn off the optimizer. You cannot set this property in <literal>hibernate.cfg.xml</literal>."
msgstr ""

#. Tag: title
#: configuration.xml:913
#, no-c-format
msgid "SQL Dialects"
msgstr ""

#. Tag: para
#: configuration.xml:915
#, no-c-format
msgid "Always set the <literal>hibernate.dialect</literal> property to the correct <literal>org.hibernate.dialect.Dialect</literal> subclass for your database. If you specify a dialect, Hibernate will use sensible defaults for some of the other properties listed above. This means that you will not have to specify them manually."
msgstr ""

#. Tag: title
#: configuration.xml:922
#, no-c-format
msgid "Hibernate SQL Dialects (<literal>hibernate.dialect</literal>)"
msgstr ""

#. Tag: entry
#: configuration.xml:933
#, no-c-format
msgid "RDBMS"
msgstr ""

#. Tag: entry
#: configuration.xml:935
#, no-c-format
msgid "Dialect"
msgstr ""

#. Tag: entry
#: configuration.xml:941
#, no-c-format
msgid "<entry>DB2</entry>"
msgstr ""

#. Tag: literal
#: configuration.xml:943
#, no-c-format
msgid "org.hibernate.dialect.DB2Dialect"
msgstr ""

#. Tag: entry
#: configuration.xml:947
#, no-c-format
msgid "DB2 AS/400"
msgstr ""

#. Tag: literal
#: configuration.xml:949
#, no-c-format
msgid "org.hibernate.dialect.DB2400Dialect"
msgstr ""

#. Tag: entry
#: configuration.xml:953
#, no-c-format
msgid "DB2 OS390"
msgstr ""

#. Tag: literal
#: configuration.xml:955
#, no-c-format
msgid "org.hibernate.dialect.DB2390Dialect"
msgstr ""

#. Tag: entry
#: configuration.xml:959
#, no-c-format
msgid "PostgreSQL"
msgstr ""

#. Tag: literal
#: configuration.xml:961
#, no-c-format
msgid "org.hibernate.dialect.PostgreSQLDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:965
#, no-c-format
msgid "MySQL"
msgstr ""

#. Tag: literal
#: configuration.xml:967
#, no-c-format
msgid "org.hibernate.dialect.MySQLDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:971
#, no-c-format
msgid "MySQL with InnoDB"
msgstr ""

#. Tag: literal
#: configuration.xml:973
#, no-c-format
msgid "org.hibernate.dialect.MySQLInnoDBDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:977
#, no-c-format
msgid "MySQL with MyISAM"
msgstr ""

#. Tag: literal
#: configuration.xml:979
#, no-c-format
msgid "org.hibernate.dialect.MySQLMyISAMDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:983
#, no-c-format
msgid "Oracle (any version)"
msgstr ""

#. Tag: literal
#: configuration.xml:985
#, no-c-format
msgid "org.hibernate.dialect.OracleDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:989
#, no-c-format
msgid "Oracle 9i"
msgstr ""

#. Tag: literal
#: configuration.xml:991
#, no-c-format
msgid "org.hibernate.dialect.Oracle9iDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:995
#, no-c-format
msgid "Oracle 10g"
msgstr ""

#. Tag: literal
#: configuration.xml:997
#, no-c-format
msgid "org.hibernate.dialect.Oracle10gDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1001
#, no-c-format
msgid "Sybase"
msgstr ""

#. Tag: literal
#: configuration.xml:1003
#, no-c-format
msgid "org.hibernate.dialect.SybaseDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1007
#, no-c-format
msgid "Sybase Anywhere"
msgstr ""

#. Tag: literal
#: configuration.xml:1009
#, no-c-format
msgid "org.hibernate.dialect.SybaseAnywhereDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1013
#, no-c-format
msgid "Microsoft SQL Server"
msgstr ""

#. Tag: literal
#: configuration.xml:1015
#, no-c-format
msgid "org.hibernate.dialect.SQLServerDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1019
#, no-c-format
msgid "SAP DB"
msgstr ""

#. Tag: literal
#: configuration.xml:1021
#, no-c-format
msgid "org.hibernate.dialect.SAPDBDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1025
#, no-c-format
msgid "Informix"
msgstr ""

#. Tag: literal
#: configuration.xml:1027
#, no-c-format
msgid "org.hibernate.dialect.InformixDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1031
#, no-c-format
msgid "HypersonicSQL"
msgstr ""

#. Tag: literal
#: configuration.xml:1033
#, no-c-format
msgid "org.hibernate.dialect.HSQLDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1037
#, no-c-format
msgid "Ingres"
msgstr ""

#. Tag: literal
#: configuration.xml:1039
#, no-c-format
msgid "org.hibernate.dialect.IngresDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1043
#, no-c-format
msgid "Progress"
msgstr ""

#. Tag: literal
#: configuration.xml:1045
#, no-c-format
msgid "org.hibernate.dialect.ProgressDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1049
#, no-c-format
msgid "Mckoi SQL"
msgstr ""

#. Tag: literal
#: configuration.xml:1051
#, no-c-format
msgid "org.hibernate.dialect.MckoiDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1055
#, no-c-format
msgid "Interbase"
msgstr ""

#. Tag: literal
#: configuration.xml:1057
#, no-c-format
msgid "org.hibernate.dialect.InterbaseDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1061
#, no-c-format
msgid "Pointbase"
msgstr ""

#. Tag: literal
#: configuration.xml:1063
#, no-c-format
msgid "org.hibernate.dialect.PointbaseDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1067
#, no-c-format
msgid "FrontBase"
msgstr ""

#. Tag: literal
#: configuration.xml:1069
#, no-c-format
msgid "org.hibernate.dialect.FrontbaseDialect"
msgstr ""

#. Tag: entry
#: configuration.xml:1073
#, no-c-format
msgid "Firebird"
msgstr ""

#. Tag: literal
#: configuration.xml:1075
#, no-c-format
msgid "org.hibernate.dialect.FirebirdDialect"
msgstr ""

#. Tag: title
#: configuration.xml:1083
#, no-c-format
msgid "Outer Join Fetching"
msgstr ""

#. Tag: para
#: configuration.xml:1085
#, no-c-format
msgid "If your database supports ANSI, Oracle or Sybase style outer joins, <emphasis>outer join fetching</emphasis> will often increase performance by limiting the number of round trips to and from the database. This is, however, at the cost of possibly more work performed by the database itself. Outer join fetching allows a whole graph of objects connected by many-to-one, one-to-many, many-to-many and one-to-one associations to be retrieved in a single SQL <literal>SELECT</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:1094
#, no-c-format
msgid "Outer join fetching can be disabled <emphasis>globally</emphasis> by setting the property <literal>hibernate.max_fetch_depth</literal> to <literal>0</literal>. A setting of <literal>1</literal> or higher enables outer join fetching for one-to-one and many-to-one associations that have been mapped with <literal>fetch=\"join\"</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:1100
#, no-c-format
msgid "See <xref linkend=\"performance-fetching\"/> for more information."
msgstr ""

#. Tag: title
#: configuration.xml:1105
#, no-c-format
msgid "Binary Streams"
msgstr ""

#. Tag: para
#: configuration.xml:1107
#, no-c-format
msgid "Oracle limits the size of <literal>byte</literal> arrays that can be passed to and/or from its JDBC driver. If you wish to use large instances of <literal>binary</literal> or <literal>serializable</literal> type, you should enable <literal>hibernate.jdbc.use_streams_for_binary</literal>. <emphasis>This is a system-level setting only.</emphasis>"
msgstr ""

#. Tag: title
#: configuration.xml:1116
#, no-c-format
msgid "Second-level and query cache"
msgstr ""

#. Tag: para
#: configuration.xml:1118
#, no-c-format
msgid "The properties prefixed by <literal>hibernate.cache</literal> allow you to use a process or cluster scoped second-level cache system with Hibernate. See the <xref linkend=\"performance-cache\"/> for more information."
msgstr ""

#. Tag: title
#: configuration.xml:1125
#, no-c-format
msgid "Query Language Substitution"
msgstr ""

#. Tag: para
#: configuration.xml:1127
#, no-c-format
msgid "You can define new Hibernate query tokens using <literal>hibernate.query.substitutions</literal>. For example:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:1130
#, no-c-format
msgid "hibernate.query.substitutions true=1, false=0"
msgstr ""

#. Tag: para
#: configuration.xml:1132
#, no-c-format
msgid "This would cause the tokens <literal>true</literal> and <literal>false</literal> to be translated to integer literals in the generated SQL."
msgstr ""

#. Tag: programlisting
#: configuration.xml:1136
#, no-c-format
msgid "hibernate.query.substitutions toLowercase=LOWER"
msgstr ""

#. Tag: para
#: configuration.xml:1138
#, no-c-format
msgid "This would allow you to rename the SQL <literal>LOWER</literal> function."
msgstr ""

#. Tag: title
#: configuration.xml:1143
#, no-c-format
msgid "Hibernate statistics"
msgstr ""

#. Tag: para
#: configuration.xml:1145
#, no-c-format
msgid "If you enable <literal>hibernate.generate_statistics</literal>, Hibernate exposes a number of metrics that are useful when tuning a running system via <literal>SessionFactory.getStatistics()</literal>. Hibernate can even be configured to expose these statistics via JMX. Read the Javadoc of the interfaces in <literal>org.hibernate.stats</literal> for more information."
msgstr ""

#. Tag: title
#: configuration.xml:1155
#, no-c-format
msgid "Logging"
msgstr ""

#. Tag: para
#: configuration.xml:1157
#, no-c-format
msgid "Hibernate utilizes <ulink url=\"http://www.slf4j.org/\">Simple Logging Facade for Java</ulink> (SLF4J) in order to log various system events. SLF4J can direct your logging output to several logging frameworks (NOP, Simple, log4j version 1.2, JDK 1.4 logging, JCL or logback) depending on your chosen binding. In order to setup logging you will need <filename>slf4j-api.jar</filename> in your classpath together with the jar file for your preferred binding - <filename>slf4j-log4j12.jar</filename> in the case of Log4J. See the SLF4J <ulink url=\"http://www.slf4j.org/manual.html\">documentation</ulink> for more detail. To use Log4j you will also need to place a <filename>log4j.properties</filename> file in your classpath. An example properties file is distributed with Hibernate in the <literal>src/</literal> directory."
msgstr ""

#. Tag: para
#: configuration.xml:1171
#, no-c-format
msgid "It is recommended that you familiarize yourself with Hibernate's log messages. A lot of work has been put into making the Hibernate log as detailed as possible, without making it unreadable. It is an essential troubleshooting device. The most interesting log categories are the following:"
msgstr ""

#. Tag: title
#: configuration.xml:1178
#, no-c-format
msgid "Hibernate Log Categories"
msgstr ""

#. Tag: entry
#: configuration.xml:1187
#, no-c-format
msgid "Category"
msgstr ""

#. Tag: entry
#: configuration.xml:1189
#, no-c-format
msgid "Function"
msgstr ""

#. Tag: literal
#: configuration.xml:1195
#, no-c-format
msgid "org.hibernate.SQL"
msgstr ""

#. Tag: entry
#: configuration.xml:1197
#, no-c-format
msgid "Log all SQL DML statements as they are executed"
msgstr ""

#. Tag: literal
#: configuration.xml:1201
#, no-c-format
msgid "org.hibernate.type"
msgstr ""

#. Tag: entry
#: configuration.xml:1203
#, no-c-format
msgid "Log all JDBC parameters"
msgstr ""

#. Tag: literal
#: configuration.xml:1207
#, no-c-format
msgid "org.hibernate.tool.hbm2ddl"
msgstr ""

#. Tag: entry
#: configuration.xml:1209
#, no-c-format
msgid "Log all SQL DDL statements as they are executed"
msgstr ""

#. Tag: literal
#: configuration.xml:1213
#, no-c-format
msgid "org.hibernate.pretty"
msgstr ""

#. Tag: entry
#: configuration.xml:1215
#, no-c-format
msgid "Log the state of all entities (max 20 entities) associated with the session at flush time"
msgstr ""

#. Tag: literal
#: configuration.xml:1220
#, no-c-format
msgid "org.hibernate.cache"
msgstr ""

#. Tag: entry
#: configuration.xml:1222
#, no-c-format
msgid "Log all second-level cache activity"
msgstr ""

#. Tag: literal
#: configuration.xml:1226
#, no-c-format
msgid "org.hibernate.transaction"
msgstr ""

#. Tag: entry
#: configuration.xml:1228
#, no-c-format
msgid "Log transaction related activity"
msgstr ""

#. Tag: literal
#: configuration.xml:1232
#, no-c-format
msgid "org.hibernate.jdbc"
msgstr ""

#. Tag: entry
#: configuration.xml:1234
#, no-c-format
msgid "Log all JDBC resource acquisition"
msgstr ""

#. Tag: literal
#: configuration.xml:1238
#, no-c-format
msgid "org.hibernate.hql.ast.AST"
msgstr ""

#. Tag: entry
#: configuration.xml:1240
#, no-c-format
msgid "Log HQL and SQL ASTs during query parsing"
msgstr ""

#. Tag: literal
#: configuration.xml:1244
#, no-c-format
msgid "org.hibernate.secure"
msgstr ""

#. Tag: entry
#: configuration.xml:1246
#, no-c-format
msgid "Log all JAAS authorization requests"
msgstr ""

#. Tag: literal
#: configuration.xml:1250
#, no-c-format
msgid "org.hibernate"
msgstr ""

#. Tag: entry
#: configuration.xml:1252
#, no-c-format
msgid "Log everything. This is a lot of information but it is useful for troubleshooting"
msgstr ""

#. Tag: para
#: configuration.xml:1259
#, no-c-format
msgid "When developing applications with Hibernate, you should almost always work with <literal>debug</literal> enabled for the category <literal>org.hibernate.SQL</literal>, or, alternatively, the property <literal>hibernate.show_sql</literal> enabled."
msgstr ""

#. Tag: title
#: configuration.xml:1266
#, no-c-format
msgid "Implementing a <literal>NamingStrategy</literal>"
msgstr ""

#. Tag: para
#: configuration.xml:1268
#, no-c-format
msgid "The interface <literal>org.hibernate.cfg.NamingStrategy</literal> allows you to specify a \"naming standard\" for database objects and schema elements."
msgstr ""

#. Tag: para
#: configuration.xml:1272
#, no-c-format
msgid "You can provide rules for automatically generating database identifiers from Java identifiers or for processing \"logical\" column and table names given in the mapping file into \"physical\" table and column names. This feature helps reduce the verbosity of the mapping document, eliminating repetitive noise (<literal>TBL_</literal> prefixes, for example). The default strategy used by Hibernate is quite minimal."
msgstr ""

#. Tag: para
#: configuration.xml:1279
#, no-c-format
msgid "You can specify a different strategy by calling <literal>Configuration.setNamingStrategy()</literal> before adding mappings:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:1283
#, no-c-format
msgid ""
      "SessionFactory sf = new Configuration()\n"
      "    .setNamingStrategy(ImprovedNamingStrategy.INSTANCE)\n"
      "    .addFile(\"Item.hbm.xml\")\n"
      "    .addFile(\"Bid.hbm.xml\")\n"
      "    .buildSessionFactory();"
msgstr ""

#. Tag: para
#: configuration.xml:1285
#, no-c-format
msgid "<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> is a built-in strategy that might be a useful starting point for some applications."
msgstr ""

#. Tag: title
#: configuration.xml:1291
#, no-c-format
msgid "XML configuration file"
msgstr ""

#. Tag: para
#: configuration.xml:1293
#, no-c-format
msgid "An alternative approach to configuration is to specify a full configuration in a file named <literal>hibernate.cfg.xml</literal>. This file can be used as a replacement for the <literal>hibernate.properties</literal> file or, if both are present, to override properties."
msgstr ""

#. Tag: para
#: configuration.xml:1299
#, no-c-format
msgid "The XML configuration file is by default expected to be in the root of your <literal>CLASSPATH</literal>. Here is an example:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:1302
#, no-c-format
msgid ""
      "&lt;?xml version='1.0' encoding='utf-8'?&gt;\n"
      "&lt;!DOCTYPE hibernate-configuration PUBLIC\n"
      "    \"-//Hibernate/Hibernate Configuration DTD//EN\"\n"
      "    \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\"&gt;\n"
      "\n"
      "&lt;hibernate-configuration&gt;\n"
      "\n"
      "    &lt;!-- a SessionFactory instance listed as /jndi/name --&gt;\n"
      "    &lt;session-factory\n"
      "        name=\"java:hibernate/SessionFactory\"&gt;\n"
      "\n"
      "        &lt;!-- properties --&gt;\n"
      "        &lt;property name=\"connection.datasource\"&gt;java:/comp/env/jdbc/MyDB&lt;/property&gt;\n"
      "        &lt;property name=\"dialect\"&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;\n"
      "        &lt;property name=\"show_sql\"&gt;false&lt;/property&gt;\n"
      "        &lt;property name=\"transaction.factory_class\"&gt;\n"
      "            org.hibernate.transaction.JTATransactionFactory\n"
      "        &lt;/property&gt;\n"
      "        &lt;property name=\"jta.UserTransaction\"&gt;java:comp/UserTransaction&lt;/property&gt;\n"
      "\n"
      "        &lt;!-- mapping files --&gt;\n"
      "        &lt;mapping resource=\"org/hibernate/auction/Item.hbm.xml\"/&gt;\n"
      "        &lt;mapping resource=\"org/hibernate/auction/Bid.hbm.xml\"/&gt;\n"
      "\n"
      "        &lt;!-- cache settings --&gt;\n"
      "        &lt;class-cache class=\"org.hibernate.auction.Item\" usage=\"read-write\"/&gt;\n"
      "        &lt;class-cache class=\"org.hibernate.auction.Bid\" usage=\"read-only\"/&gt;\n"
      "        &lt;collection-cache collection=\"org.hibernate.auction.Item.bids\" usage=\"read-write\"/&gt;\n"
      "\n"
      "    &lt;/session-factory&gt;\n"
      "\n"
      "&lt;/hibernate-configuration&gt;"
msgstr ""

#. Tag: para
#: configuration.xml:1304
#, no-c-format
msgid "The advantage of this approach is the externalization of the mapping file names to configuration. The <literal>hibernate.cfg.xml</literal> is also more convenient once you have to tune the Hibernate cache. It is your choice to use either <literal>hibernate.properties</literal> or <literal>hibernate.cfg.xml</literal>. Both are equivalent, except for the above mentioned benefits of using the XML syntax."
msgstr ""

#. Tag: para
#: configuration.xml:1311
#, no-c-format
msgid "With the XML configuration, starting Hibernate is then as simple as:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:1314
#, no-c-format
msgid "SessionFactory sf = new Configuration().configure().buildSessionFactory();"
msgstr ""

#. Tag: para
#: configuration.xml:1316
#, no-c-format
msgid "You can select a different XML configuration file using:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:1318
#, no-c-format
msgid ""
      "SessionFactory sf = new Configuration()\n"
      "    .configure(\"catdb.cfg.xml\")\n"
      "    .buildSessionFactory();"
msgstr ""

#. Tag: title
#: configuration.xml:1322
#, no-c-format
msgid "J2EE Application Server integration"
msgstr ""

#. Tag: para
#: configuration.xml:1324
#, no-c-format
msgid "Hibernate has the following integration points for J2EE infrastructure:"
msgstr ""

#. Tag: para
#: configuration.xml:1329
#, no-c-format
msgid "<emphasis>Container-managed datasources</emphasis>: Hibernate can use JDBC connections managed by the container and provided through JNDI. Usually, a JTA compatible <literal>TransactionManager</literal> and a <literal>ResourceManager</literal> take care of transaction management (CMT), especially distributed transaction handling across several datasources. You can also demarcate transaction boundaries programmatically (BMT), or you might want to use the optional Hibernate <literal>Transaction</literal> API for this to keep your code portable."
msgstr ""

#. Tag: para
#: configuration.xml:1343
#, no-c-format
msgid "<emphasis>Automatic JNDI binding</emphasis>: Hibernate can bind its <literal>SessionFactory</literal> to JNDI after startup."
msgstr ""

#. Tag: para
#: configuration.xml:1350
#, no-c-format
msgid "<emphasis>JTA Session binding:</emphasis> the Hibernate <literal>Session</literal> can be automatically bound to the scope of JTA transactions. Simply lookup the <literal>SessionFactory</literal> from JNDI and get the current <literal>Session</literal>. Let Hibernate manage flushing and closing the <literal>Session</literal> when your JTA transaction completes. Transaction demarcation is either declarative (CMT) or programmatic (BMT/UserTransaction)."
msgstr ""

#. Tag: para
#: configuration.xml:1362
#, no-c-format
msgid "<emphasis>JMX deployment:</emphasis> if you have a JMX capable application server (e.g. JBoss AS), you can choose to deploy Hibernate as a managed MBean. This saves you the one line startup code to build your <literal>SessionFactory</literal> from a <literal>Configuration</literal>. The container will startup your <literal>HibernateService</literal> and also take care of service dependencies (datasource has to be available before Hibernate starts, etc)."
msgstr ""

#. Tag: para
#: configuration.xml:1373
#, no-c-format
msgid "Depending on your environment, you might have to set the configuration option <literal>hibernate.connection.aggressive_release</literal> to true if your application server shows \"connection containment\" exceptions."
msgstr ""

#. Tag: title
#: configuration.xml:1379
#, no-c-format
msgid "Transaction strategy configuration"
msgstr ""

#. Tag: para
#: configuration.xml:1381
#, no-c-format
msgid "The Hibernate <literal>Session</literal> API is independent of any transaction demarcation system in your architecture. If you let Hibernate use JDBC directly through a connection pool, you can begin and end your transactions by calling the JDBC API. If you run in a J2EE application server, you might want to use bean-managed transactions and call the JTA API and <literal>UserTransaction</literal> when needed."
msgstr ""

#. Tag: para
#: configuration.xml:1389
#, no-c-format
msgid "To keep your code portable between these two (and other) environments we recommend the optional Hibernate <literal>Transaction</literal> API, which wraps and hides the underlying system. You have to specify a factory class for <literal>Transaction</literal> instances by setting the Hibernate configuration property <literal>hibernate.transaction.factory_class</literal>."
msgstr ""

#. Tag: para
#: configuration.xml:1397
#, no-c-format
msgid "There are three standard, or built-in, choices:"
msgstr ""

#. Tag: literal
#: configuration.xml:1401
#, no-c-format
msgid "org.hibernate.transaction.JDBCTransactionFactory"
msgstr ""

#. Tag: para
#: configuration.xml:1404
#, no-c-format
msgid "delegates to database (JDBC) transactions (default)"
msgstr ""

#. Tag: literal
#: configuration.xml:1409
#, no-c-format
msgid "org.hibernate.transaction.JTATransactionFactory"
msgstr ""

#. Tag: para
#: configuration.xml:1412
#, no-c-format
msgid "delegates to container-managed transactions if an existing transaction is underway in this context (for example, EJB session bean method). Otherwise, a new transaction is started and bean-managed transactions are used."
msgstr ""

#. Tag: literal
#: configuration.xml:1420
#, no-c-format
msgid "org.hibernate.transaction.CMTTransactionFactory"
msgstr ""

#. Tag: para
#: configuration.xml:1423
#, no-c-format
msgid "delegates to container-managed JTA transactions"
msgstr ""

#. Tag: para
#: configuration.xml:1428
#, no-c-format
msgid "You can also define your own transaction strategies (for a CORBA transaction service, for example)."
msgstr ""

#. Tag: para
#: configuration.xml:1431
#, no-c-format
msgid "Some features in Hibernate (i.e., the second level cache, Contextual Sessions with JTA, etc.) require access to the JTA <literal>TransactionManager</literal> in a managed environment. In an application server, since J2EE does not standardize a single mechanism, you have to specify how Hibernate should obtain a reference to the <literal>TransactionManager</literal>:"
msgstr ""

#. Tag: title
#: configuration.xml:1439
#, no-c-format
msgid "JTA TransactionManagers"
msgstr ""

#. Tag: entry
#: configuration.xml:1448
#, no-c-format
msgid "Transaction Factory"
msgstr ""

#. Tag: entry
#: configuration.xml:1450
#, no-c-format
msgid "Application Server"
msgstr ""

#. Tag: literal
#: configuration.xml:1456
#, no-c-format
msgid "org.hibernate.transaction.JBossTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1458
#, no-c-format
msgid "JBoss"
msgstr ""

#. Tag: literal
#: configuration.xml:1462
#, no-c-format
msgid "org.hibernate.transaction.WeblogicTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1464
#, no-c-format
msgid "Weblogic"
msgstr ""

#. Tag: literal
#: configuration.xml:1468
#, no-c-format
msgid "org.hibernate.transaction.WebSphereTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1470
#, no-c-format
msgid "WebSphere"
msgstr ""

#. Tag: literal
#: configuration.xml:1474
#, no-c-format
msgid "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1476
#, no-c-format
msgid "WebSphere 6"
msgstr ""

#. Tag: literal
#: configuration.xml:1480
#, no-c-format
msgid "org.hibernate.transaction.OrionTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1482
#, no-c-format
msgid "Orion"
msgstr ""

#. Tag: literal
#: configuration.xml:1486
#, no-c-format
msgid "org.hibernate.transaction.ResinTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1488
#, no-c-format
msgid "Resin"
msgstr ""

#. Tag: literal
#: configuration.xml:1492
#, no-c-format
msgid "org.hibernate.transaction.JOTMTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1494
#, no-c-format
msgid "JOTM"
msgstr ""

#. Tag: literal
#: configuration.xml:1498
#, no-c-format
msgid "org.hibernate.transaction.JOnASTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1500
#, no-c-format
msgid "JOnAS"
msgstr ""

#. Tag: literal
#: configuration.xml:1504
#, no-c-format
msgid "org.hibernate.transaction.JRun4TransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1506
#, no-c-format
msgid "JRun4"
msgstr ""

#. Tag: literal
#: configuration.xml:1510
#, no-c-format
msgid "org.hibernate.transaction.BESTransactionManagerLookup"
msgstr ""

#. Tag: entry
#: configuration.xml:1512
#, no-c-format
msgid "Borland ES"
msgstr ""

#. Tag: title
#: configuration.xml:1520
#, no-c-format
msgid "JNDI-bound <literal>SessionFactory</literal>"
msgstr ""

#. Tag: para
#: configuration.xml:1522
#, no-c-format
msgid "A JNDI-bound Hibernate <literal>SessionFactory</literal> can simplify the lookup function of the factory and create new <literal>Session</literal>s. This is not, however, related to a JNDI bound <literal>Datasource</literal>; both simply use the same registry."
msgstr ""

#. Tag: para
#: configuration.xml:1528
#, no-c-format
msgid "If you wish to have the <literal>SessionFactory</literal> bound to a JNDI namespace, specify a name (e.g. <literal>java:hibernate/SessionFactory</literal>) using the property <literal>hibernate.session_factory_name</literal>. If this property is omitted, the <literal>SessionFactory</literal> will not be bound to JNDI. This is especially useful in environments with a read-only JNDI default implementation (in Tomcat, for example)."
msgstr ""

#. Tag: para
#: configuration.xml:1536
#, no-c-format
msgid "When binding the <literal>SessionFactory</literal> to JNDI, Hibernate will use the values of <literal>hibernate.jndi.url</literal>, <literal>hibernate.jndi.class</literal> to instantiate an initial context. If they are not specified, the default <literal>InitialContext</literal> will be used."
msgstr ""

#. Tag: para
#: configuration.xml:1542
#, no-c-format
msgid "Hibernate will automatically place the <literal>SessionFactory</literal> in JNDI after you call <literal>cfg.buildSessionFactory()</literal>. This means you will have this call in some startup code, or utility class in your application, unless you use JMX deployment with the <literal>HibernateService</literal> (this is discussed later in greater detail)."
msgstr ""

#. Tag: para
#: configuration.xml:1550
#, no-c-format
msgid "If you use a JNDI <literal>SessionFactory</literal>, an EJB or any other class, you can obtain the <literal>SessionFactory</literal> using a JNDI lookup."
msgstr ""

#. Tag: para
#: configuration.xml:1554
#, no-c-format
msgid "It is recommended that you bind the <literal>SessionFactory</literal> to JNDI in a managed environment and use a <literal>static</literal> singleton otherwise. To shield your application code from these details, we also recommend to hide the actual lookup code for a <literal>SessionFactory</literal> in a helper class, such as <literal>HibernateUtil.getSessionFactory()</literal>. Note that such a class is also a convenient way to startup Hibernate—see chapter 1."
msgstr ""

#. Tag: title
#: configuration.xml:1565
#, no-c-format
msgid "Current Session context management with JTA"
msgstr ""

#. Tag: para
#: configuration.xml:1567
#, no-c-format
msgid "The easiest way to handle <literal>Sessions</literal> and transactions is Hibernate's automatic \"current\" <literal>Session</literal> management. For a discussion of contextual sessions see <xref linkend=\"architecture-current-session\"/>. Using the <literal>\"jta\"</literal> session context, if there is no Hibernate <literal>Session</literal> associated with the current JTA transaction, one will be started and associated with that JTA transaction the first time you call <literal>sessionFactory.getCurrentSession()</literal>. The <literal>Session</literal>s retrieved via <literal>getCurrentSession()</literal> in the <literal>\"jta\"</literal> context are set to automatically flush before the transaction completes, close after the transaction completes, and aggressively release JDBC connections after each statement. This allows the <literal>Session</literal>s to be managed by the life cycle of the JTA transaction to which it is associated, keeping user code clean of such management concerns. Your code can either use JTA programmatically through <literal>UserTransaction</literal>, or (recommended for portable code) use the Hibernate <literal>Transaction</literal> API to set transaction boundaries. If you run in an EJB container, declarative transaction demarcation with CMT is preferred."
msgstr ""

#. Tag: title
#: configuration.xml:1590
#, no-c-format
msgid "JMX deployment"
msgstr ""

#. Tag: para
#: configuration.xml:1592
#, no-c-format
msgid "The line <literal>cfg.buildSessionFactory()</literal> still has to be executed somewhere to get a <literal>SessionFactory</literal> into JNDI. You can do this either in a <literal>static</literal> initializer block, like the one in <literal>HibernateUtil</literal>, or you can deploy Hibernate as a <emphasis>managed service</emphasis>."
msgstr ""

#. Tag: para
#: configuration.xml:1598
#, no-c-format
msgid "Hibernate is distributed with <literal>org.hibernate.jmx.HibernateService</literal> for deployment on an application server with JMX capabilities, such as JBoss AS. The actual deployment and configuration is vendor-specific. Here is an example <literal>jboss-service.xml</literal> for JBoss 4.0.x:"
msgstr ""

#. Tag: programlisting
#: configuration.xml:1604
#, no-c-format
msgid ""
      "&lt;?xml version=\"1.0\"?&gt;\n"
      "&lt;server&gt;\n"
      "\n"
      "&lt;mbean code=\"org.hibernate.jmx.HibernateService\"\n"
      "    name=\"jboss.jca:service=HibernateFactory,name=HibernateFactory\"&gt;\n"
      "\n"
      "    &lt;!-- Required services --&gt;\n"
      "    &lt;depends&gt;jboss.jca:service=RARDeployer&lt;/depends&gt;\n"
      "    &lt;depends&gt;jboss.jca:service=LocalTxCM,name=HsqlDS&lt;/depends&gt;\n"
      "\n"
      "    &lt;!-- Bind the Hibernate service to JNDI --&gt;\n"
      "    &lt;attribute name=\"JndiName\"&gt;java:/hibernate/SessionFactory&lt;/attribute&gt;\n"
      "\n"
      "    &lt;!-- Datasource settings --&gt;\n"
      "    &lt;attribute name=\"Datasource\"&gt;java:HsqlDS&lt;/attribute&gt;\n"
      "    &lt;attribute name=\"Dialect\"&gt;org.hibernate.dialect.HSQLDialect&lt;/attribute&gt;\n"
      "\n"
      "    &lt;!-- Transaction integration --&gt;\n"
      "    &lt;attribute name=\"TransactionStrategy\"&gt;\n"
      "        org.hibernate.transaction.JTATransactionFactory&lt;/attribute&gt;\n"
      "    &lt;attribute name=\"TransactionManagerLookupStrategy\"&gt;\n"
      "        org.hibernate.transaction.JBossTransactionManagerLookup&lt;/attribute&gt;\n"
      "    &lt;attribute name=\"FlushBeforeCompletionEnabled\"&gt;true&lt;/attribute&gt;\n"
      "    &lt;attribute name=\"AutoCloseSessionEnabled\"&gt;true&lt;/attribute&gt;\n"
      "\n"
      "    &lt;!-- Fetching options --&gt;\n"
      "    &lt;attribute name=\"MaximumFetchDepth\"&gt;5&lt;/attribute&gt;\n"
      "\n"
      "    &lt;!-- Second-level caching --&gt;\n"
      "    &lt;attribute name=\"SecondLevelCacheEnabled\"&gt;true&lt;/attribute&gt;\n"
      "    &lt;attribute name=\"CacheProviderClass\"&gt;org.hibernate.cache.EhCacheProvider&lt;/attribute&gt;\n"
      "    &lt;attribute name=\"QueryCacheEnabled\"&gt;true&lt;/attribute&gt;\n"
      "\n"
      "    &lt;!-- Logging --&gt;\n"
      "    &lt;attribute name=\"ShowSqlEnabled\"&gt;true&lt;/attribute&gt;\n"
      "\n"
      "    &lt;!-- Mapping files --&gt;\n"
      "    &lt;attribute name=\"MapResources\"&gt;auction/Item.hbm.xml,auction/Category.hbm.xml&lt;/attribute&gt;\n"
      "\n"
      "&lt;/mbean&gt;\n"
      "\n"
      "&lt;/server&gt;"
msgstr ""

#. Tag: para
#: configuration.xml:1606
#, no-c-format
msgid "This file is deployed in a directory called <literal>META-INF</literal> and packaged in a JAR file with the extension <literal>.sar</literal> (service archive). You also need to package Hibernate, its required third-party libraries, your compiled persistent classes, as well as your mapping files in the same archive. Your enterprise beans (usually session beans) can be kept in their own JAR file, but you can include this EJB JAR file in the main service archive to get a single (hot-)deployable unit. Consult the JBoss AS documentation for more information about JMX service and EJB deployment."
msgstr ""

